#!/usr/bin/env python

from __future__ import print_function

import sys

from xml.dom.minidom import parse, parseString

dom = parse(sys.stdin)

namespaces = {
  'ovf':    'http://schemas.dmtf.org/ovf/envelope/1',
  'vcloud': 'http://www.vmware.com/vcloud/v1.5',
}

root = dom.getElementsByTagName('Envelope')[0]
root.setAttribute('xmlns:vcloud', namespaces['vcloud'])

# Update the OperatingSystemSection tag osType to reflect ubuntu OS
oss_tag = dom.getElementsByTagName('OperatingSystemSection')[0]
oss_tag.setAttribute('vmw:osType', 'ubuntu64Guest')

# # Set the VirtualSystemType (VMware HW version) to v8
vst_tag = dom.getElementsByTagName('vssd:VirtualSystemType')[0]
vst_tag.firstChild.replaceWholeText('vmx-08')

# Change network name to Default.
net_name = 'Default'
net_description = 'The Default network'
conn_description = 'PCNet32 ethernet adapter on "Default"'

net_tag = dom.getElementsByTagName('NetworkSection')[0]
net_tag = net_tag.getElementsByTagName('Network')[0]
net_tag.setAttribute('ovf:name', net_name)
description_tag = net_tag.getElementsByTagName('Description')[0]
description_tag.firstChild.replaceWholeText(net_description)

conn_tag = dom.getElementsByTagName('rasd:Connection')[0]
conn_tag.firstChild.replaceWholeText(net_name)
item_tag = conn_tag.parentNode
description_tag = item_tag.getElementsByTagName('rasd:Description')[0]
description_tag.firstChild.replaceWholeText(conn_description)

# Add the vCloud customization section at the end of the VirtualSystem tag
vs_tag = dom.getElementsByTagName('VirtualSystem')[0]

customization = """
  <root xmlns:ovf="{ovf}" xmlns:vcloud="{vcloud}">
    <vcloud:CustomizationSection goldMaster="false" ovf:required="false">
      <Info>VApp template customization section</Info>
      <vcloud:CustomizeOnInstantiate>true</vcloud:CustomizeOnInstantiate>
    </vcloud:CustomizationSection>
  </root>
"""
guest_customization = """
  <root xmlns:ovf="{ovf}" xmlns:vcloud="{vcloud}">
    <vcloud:GuestCustomizationSection ovf:required="false">
      <Info>Specifies Guest OS Customization Settings</Info>
      <vcloud:Enabled>true</vcloud:Enabled>
      <vcloud:ChangeSid>false</vcloud:ChangeSid>
      <vcloud:JoinDomainEnabled>false</vcloud:JoinDomainEnabled>
      <vcloud:UseOrgSettings>false</vcloud:UseOrgSettings>
      <vcloud:AdminPasswordEnabled>false</vcloud:AdminPasswordEnabled>
      <vcloud:AdminPasswordAuto>true</vcloud:AdminPasswordAuto>
      <!-- Maybe try this another time... -->
      <!-- <vcloud:AdminPassword>tutu</vcloud:AdminPassword> -->
      <vcloud:ResetPasswordRequired>false</vcloud:ResetPasswordRequired>
      <vcloud:CustomizationScript></vcloud:CustomizationScript>
    </vcloud:GuestCustomizationSection>
  </root>
"""
network = """
  <root xmlns:ovf="{ovf}" xmlns:vcloud="{vcloud}">
    <vcloud:NetworkConnectionSection ovf:required="false">
      <Info>The configuration parameters for logical networks</Info>
      <vcloud:PrimaryNetworkConnectionIndex>0</vcloud:PrimaryNetworkConnectionIndex>
      <vcloud:NetworkConnection network="Default" needsCustomization="true">
        <vcloud:NetworkConnectionIndex>0</vcloud:NetworkConnectionIndex>
        <vcloud:IsConnected>false</vcloud:IsConnected>
        <vcloud:MACAddress>00:01:02:03:04:05</vcloud:MACAddress>
        <vcloud:IpAddressAllocationMode>NONE</vcloud:IpAddressAllocationMode>
      </vcloud:NetworkConnection>
    </vcloud:NetworkConnectionSection>
  </root>
"""

for tag in (customization, guest_customization, network):
    # Parse each "sub" document.
    sub_root = parseString(tag.format(**namespaces)).childNodes[0]

    # Remove "root" node of sub-doc; select all of it's children. It is
    # only required for qualifying the namespaces used within the sub-doc.
    # Without it minidom will fail to parse the string.
    sub_nodes = sub_root.childNodes[1]

    vs_tag.appendChild(sub_nodes)

print(dom.toxml())
